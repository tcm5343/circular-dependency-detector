name: Pull Request Verification
on:
  pull_request:
    branches:
      - main

jobs:
  circular-dependency-detector:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev

          # - name: Generate Adjacency List
          #   id: adj-list
          #   run: |  
          #     echo "adj-list-artifact-path<<EOF" >> $GITHUB_OUTPUT
        
          #     # here we can place the command that will generate multi-line text
          #     echo $(cat adjacency_list.txt) >> $GITHUB_OUTPUT 
              
          #     echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Adjacency List
        id: adj-list
        run: |  
          filename="adjacency_list.txt"
          echo ./adjacency_list.txt > ${filename}
          pwd
          echo "adj-list-artifact-path=$(pwd)/${filename}" >> $GITHUB_OUTPUT

      - name: Upload Adjacency List
        uses: actions/upload-artifact@v4
        with:
          name: adj-list
          path: ${{ steps.adj-list.outputs.adj-list-artifact-path }}

      # - name: Print Adjacency List
      #   run: |
      #     ls
      #     pwd
      #     echo ${{ steps.adj-list.outputs.adj-list-artifact-path }}

      - name: Circular Dependency Detector
        id: circular-dependency-detector
        #uses: actions/circular-dependency-detector@v2
        uses: ./
        with:
          adjacency_list_path: ${{ steps.adj-list.outputs.adj-list-artifact-path }}

      # - name: circular-dependency-detector
      #   uses: tcm5343/circular-dependency-detector@v0.1.0-alpha
      #   with:
      #     adjacency_list_path: ${{ steps.adj-list.outputs.adj-list-artifact-path }}

      

    # outputs:
    #   adj-list-artifact-path: ${{ steps.adj-list.outputs.adj-list-artifact-path }}

  # circular-dependency-detector:
  #   needs: build-adjacency-list
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         ref: miller-init

