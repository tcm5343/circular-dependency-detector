// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v3.12.4
// source: protos/alloy_analyzer.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	AlloyAnalyzer_AnalyzeModel_FullMethodName = "/alloy.AlloyAnalyzer/analyzeModel"
)

// AlloyAnalyzerClient is the client API for AlloyAnalyzer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AlloyAnalyzerClient interface {
	AnalyzeModel(ctx context.Context, in *ModelRequest, opts ...grpc.CallOption) (*ModelResponse, error)
}

type alloyAnalyzerClient struct {
	cc grpc.ClientConnInterface
}

func NewAlloyAnalyzerClient(cc grpc.ClientConnInterface) AlloyAnalyzerClient {
	return &alloyAnalyzerClient{cc}
}

func (c *alloyAnalyzerClient) AnalyzeModel(ctx context.Context, in *ModelRequest, opts ...grpc.CallOption) (*ModelResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ModelResponse)
	err := c.cc.Invoke(ctx, AlloyAnalyzer_AnalyzeModel_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlloyAnalyzerServer is the server API for AlloyAnalyzer service.
// All implementations must embed UnimplementedAlloyAnalyzerServer
// for forward compatibility
type AlloyAnalyzerServer interface {
	AnalyzeModel(context.Context, *ModelRequest) (*ModelResponse, error)
	mustEmbedUnimplementedAlloyAnalyzerServer()
}

// UnimplementedAlloyAnalyzerServer must be embedded to have forward compatible implementations.
type UnimplementedAlloyAnalyzerServer struct {
}

func (UnimplementedAlloyAnalyzerServer) AnalyzeModel(context.Context, *ModelRequest) (*ModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnalyzeModel not implemented")
}
func (UnimplementedAlloyAnalyzerServer) mustEmbedUnimplementedAlloyAnalyzerServer() {}

// UnsafeAlloyAnalyzerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AlloyAnalyzerServer will
// result in compilation errors.
type UnsafeAlloyAnalyzerServer interface {
	mustEmbedUnimplementedAlloyAnalyzerServer()
}

func RegisterAlloyAnalyzerServer(s grpc.ServiceRegistrar, srv AlloyAnalyzerServer) {
	s.RegisterService(&AlloyAnalyzer_ServiceDesc, srv)
}

func _AlloyAnalyzer_AnalyzeModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlloyAnalyzerServer).AnalyzeModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AlloyAnalyzer_AnalyzeModel_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlloyAnalyzerServer).AnalyzeModel(ctx, req.(*ModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AlloyAnalyzer_ServiceDesc is the grpc.ServiceDesc for AlloyAnalyzer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AlloyAnalyzer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "alloy.AlloyAnalyzer",
	HandlerType: (*AlloyAnalyzerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "analyzeModel",
			Handler:    _AlloyAnalyzer_AnalyzeModel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/alloy_analyzer.proto",
}
